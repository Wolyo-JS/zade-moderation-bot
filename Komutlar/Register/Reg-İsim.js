const { MessageEmbed } = require("discord.js");
const Register = require('../../models/Register.js');
const User = require("../../Schemas/User.js");
const Penal = require("../../Schemas/Penal.js");
const penalPoints = require("../../Schemas/Cezapuan.js");

exports.run = async (client, message, args) => {
  if (!message.member.hasPermission("ADMINISTRATOR") && !global.Perm.Register.Auth_Roles.some(e => message.member.roles.cache.has(e))) return;

  const member = message.mentions.members.first() || message.guild.members.cache.get(args[0]);
  if (!member) return message.channel.send("Ä°smi deÄŸiÅŸtirilecek kullanÄ±cÄ±yÄ± belirtin.");
  const nick = args.slice(1).filter(arg => isNaN(arg)).map(arg => arg[0].toUpperCase() + arg.slice(1).toLowerCase()).join(" ");
  if (!nick) return message.channel.send("Yeni ismi belirtin.");
  if (nick && (await client.chatKoruma(nick))) return message.reply('Reklam yazma anneni deÅŸerim')
  const age = args.slice(1).filter(arg => !isNaN(arg))[0] ?? undefined;
  if (!age || isNaN(age)) return message.channel.send("GeÃ§erli bir yaÅŸ belirtin.");
  if (message.member.roles.highest.position <= member.roles.highest.position) return message.channel.send(`BelirttiÄŸin kiÅŸi senden Ã¼stÃ¼n veya onunla aynÄ± yetkidesin!`).then(x => x.delete({timeout: 5000}));
  if(nick.length > 30) return client.reply(message, "isim ya da yaÅŸ ile birlikte toplam 30 karakteri geÃ§ecek bir isim giremezsin.")
  if (age < global.Perm.Defaults.Age_Limit) return message.channel.send(`KayÄ±t ettiÄŸin Ã¼yenin yaÅŸÄ± ${global.Perm.Defaults.Age_Limit}'(t(d)(a(e)n kÃ¼Ã§Ã¼k olamaz.`);
  if (age > 99) return message.channel.send(`KayÄ±t ettiÄŸin Ã¼yenin yaÅŸÄ± iki basamakdan bÃ¼yÃ¼k olamaz.`);
  
  /*if(!member.user.username.includes(global.Perm.Defaults.Tag) && !member.roles.cache.has(global.Perm.Defaults.Booster_Role) && !member.roles.cache.has(global.Perm.OzelKomutlar.VIP)) {
    message.channel.send(`${member} isimli Ã¼yenin kullanÄ±cÄ± adÄ±nda tagÄ±mÄ±z (\`${global.Perm.Defaults.Tag}\`) olmadÄ±ÄŸÄ±, <@&${global.Perm.Defaults.Booster_Role}>, <@&${global.Perm.OzelKomutlar.VIP}> RolÃ¼ olmadÄ±ÄŸÄ± iÃ§in kayÄ±t iÅŸlemi iptal edildi.`)
    return;
    }*/

  let ban = await Penal.model.countDocuments({ User: member.id, Activity: false, Type: "BAN" });
  let kick = await Penal.model.countDocuments({ User: member.id, Activity: false, Type: "KICK" });
  let uyarÄ±lar = await Penal.model.countDocuments({ User: member.id, Activity: true, Type: "WARN" });
  let jail = await Penal.model.countDocuments({ User: member.id, Activity: false, Type: "JAIL" });
  let mute = await Penal.model.countDocuments({ User: member.id, Activity: false, Type: "TEMP_MUTE" });
  let voicemute = await Penal.model.countDocuments({ User: member.id, Activity: false, Type: "TEMP_VOICE_MUTE" });
  let pData = await penalPoints.findOne({ guildID: message.guild.id, userID: member.id });

  if (
    pData.point >= global.Perm.Defaults.Point_Limit &&
    !message.member.roles.cache.some(role => message.guild.roles.cache.get(global.Perm.Defaults.Ust_Yetkili).rawPosition <= role.rawPosition)
  ) {
    const embed = new MessageEmbed()
.setAuthor(member.user.tag, member.user.avatarURL({ dynamic: true }))
.setColor("RANDOM")
.setDescription(`
ğŸš« ${member.toString()} kiÅŸisinin toplam ${pData.point} ceza puanÄ± 
olduÄŸu iÃ§in kayÄ±t iÅŸlemi iptal edildi. Sunucumuzda tÃ¼m 
iÅŸlemlerin kayÄ±t altÄ±na alÄ±ndÄ±ÄŸÄ±nÄ± unutmayÄ±n. Sorun TeÅŸkil eden, 
sunucunun huzurunu bozan ve kurallara uymayan kullanÄ±cÄ±lar 
sunucumuza kayÄ±t olamazlar. 
Belirtilen Ã¼ye toplamda ${ban} adet ban, ${kick} adet kick, ${jail} adet cezalÄ±,
${mute} adet chat-mute, ${voicemute} adet voice-mute, ${uyarÄ±lar} adet uyarÄ± almÄ±ÅŸ.
       
EÄŸer konu hakkÄ±nda bir ÅŸikayetiniz var ise <@&${global.Perm.Defaults.Ust_Yetkili}>
rolÃ¼ ve Ã¼stlerine ulaÅŸabilirsiniz.
`)
    return message.channel.send(embed)
  }

  /*if (
    puan >= 100 &&
    !message.member.roles.cache.some(role => message.guild.roles.cache.get(global.Perm.Defaults.Ust_Yetkili).rawPosition <= role.rawPosition)
  ) {
    const embed = new MessageEmbed()
      .setAuthor(member.user.username, member.user.avatarURL({ dynamic: true }))
      .setColor("RANDOM")
      .setDescription(`Bu Ã¼yenin ceza puanÄ± ${puan} Bu sebepten Ã¶tÃ¼rÃ¼ Ã¼yenin kaydÄ± \n gerÃ§ekleÅŸtirelemedi. \n\n Belirtilen Ã¼ye toplamda ${jail} adet cezalÄ±, ${mute} adet chat-mute, ${ses} adet \n voice-mute almÄ±ÅŸ LÃ¼tfen <@&${global.Perm.Defaults.Ust_Yetkili}> ve Ã¼stÃ¼ndeki bir yetkiliye \n ulaÅŸÄ±n.`)
    return message.channel.send(embed)
  }*/

  const newnick = `${member.user.username.includes(global.Perm.Defaults.Tag) ? global.Perm.Defaults.Tag : (global.Perm.Defaults.Secondary_Tag ? global.Perm.Defaults.Secondary_Tag : (global.Perm.Defaults.Secondary_Tag || ""))} ${nick} | ${age}`;
  await member.setNickname(newnick);

  const nickData = {
    nick: newnick,
    type: "Ä°sim DeÄŸiÅŸtirme"
  };

  let registerModel = await Register.findOne({
    guildId: message.guild.id, 
    userId: member.user.id
  });
  if (!registerModel) registerModel = await Register.create({
      guildId: message.guild.id,
      userId: member.user.id,
      totalRegister: 0,
      womanRegister: 0,
      manRegister: 0,
      userNames: []
    });

/*${newnick}*/
  const embed = new MessageEmbed()
    .setAuthor(message.author.tag, message.author.avatarURL({ dynamic: true }))
    .setColor("RANDOM")
    .setFooter(`Ãœyenin ceza puanÄ± ${pData.point ?? 0}`)
    .setDescription(
`${member.toString()} kiÅŸisinin adÄ± baÅŸarÄ±yla "${nick} | ${age}" olarak deÄŸiÅŸtirildi. Bu Ã¼ye daha Ã¶nce ÅŸu isimlerle kayÄ±t olmuÅŸ:\n\n` +
`<a:kirmizitik:809041906990448670> KiÅŸinin Toplamda ${registerModel?.userNames?.length ?? 0} isim kayÄ±tÄ± bulundu.\n` +
 (registerModel?.userNames?.map(x => `\`â€¢ ${x.nick}\` (${x.type.replace(`Erkek`, `<@&${global.Perm.Register.Man[0]}>`).replace(`KÄ±z`, `<@&${global.Perm.Register.Woman[0]}>`)})`).join("\n ") || "Daha Ã¶nce kayÄ±t olmamÄ±ÅŸ.") + "\n\n" +
`KiÅŸinin Ã¶nceki isimlerine \`${Ayarlar.Prefix}isimler @Ã¼ye\` komutuyla bakarak kayÄ±t iÅŸlemini gerÃ§ekleÅŸtirmeniz Ã¶nerilir.` 
);

  await message.channel.send(embed);

  const onay = await message.channel.awaitMessages((m) => m.author.id == message.author.id && ["e", "k", "iptal"].some(cevap => m.content.toLowerCase().includes(cevap)), {max: 1, time: 1000 * 15 });
  if (onay.size < 1) {
    await Register.updateOne({
      guildId: message.guild.id, 
      userId: member.user.id
    }, {
      userNames: [ ...registerModel.userNames, nickData ]
    });
    return message.channel.send(embed.setDescription(`${member.toString()} adlÄ± Ã¼yenin kaydÄ± herhangi bir iÅŸlem yapÄ±lmadÄ±ÄŸÄ±ndan dolayÄ± iptal edildi.`)).then(x => x.delete({timeout: 5000}));
  }

  
    let kullanici = message.mentions.users.first() || client.users.cache.get(args[0]) || (args.length > 0 ? client.users.cache.filter(e => e.username.toLowerCase().includes(args.join(" ").toLowerCase())).first(): message.author) || message.author;
    let uye = message.guild.member(kullanici);
  const onayContent = onay.first().content.toLowerCase();

  if (onayContent.includes(".e")) {
    let staffData = await Register.findOne({ guildId: message.guild.id, userId: message.author.id });
    if (!staffData) staffData = new Register({
      guildId: message.guild.id,
      userId: message.author.id,
      totalRegister: 1,
      womanRegister: 0,
      manRegister: 1,
      userNames: []
    });
    staffData.totalRegister++
    staffData.manRegister++
    await staffData.save();
    nickData.type = "Erkek";
    await Register.updateOne({
      guildId: message.guild.id, 
      userId: member.user.id
    }, {
      userNames: [ ...registerModel.userNames, nickData ]
    });

    /*await member.roles.add(global.Perm.Register.Man)
    await member.roles.remove(global.Perm.Welcome.Unregistered)
    await member.roles.remove(global.Perm.Register.Woman)*/

    let roles = member.roles.cache.clone().filter(e => e.managed).map(e => e.id).concat(global.Perm.Register.Man);
    if(member.user.username.includes(global.Perm.Defaults.Tag)) roles.push(global.Perm.Defaults.Family_Role)
    member.roles.set(roles).catch();
   
    const embed = new MessageEmbed()
      .setAuthor(message.author.tag, message.author.avatarURL({ dynamic: true }))
      .setColor("RANDOM")
      .setDescription(`${member.toString()} Ã¼yesine ${global.Perm.Register.Man.map(x => `<@&${x}>`)} rolleri verildi.`).setFooter(`Ãœyenin ceza puanÄ± ${pData.point ?? 0}`);
    message.channel.send(embed)//.then(x => x.delete({timeout: 5000}))
    if (global.Perm.Defaults.General_Chat && client.channels.cache.has(global.Perm.Defaults.General_Chat)) client.channels.cache.get(global.Perm.Defaults.General_Chat).send(`AramÄ±za yeni biri katÄ±ldÄ±! ${member.toString()} ona hoÅŸ geldin diyelim!`)
  }

  if (onayContent.includes(".k")) {
    let staffData = await Register.findOne({ guildId: message.guild.id, userId: message.author.id });
    if (!staffData) staffData = new Register({
      guildId: message.guild.id,
      userId: message.author.id,
      totalRegister: 1,
      womanRegister: 0,
      manRegister: 1,
      userNames: []
    });
    staffData.totalRegister++
    staffData.womanRegister++
    await staffData.save();
    nickData.type = "KÄ±z";
    await Register.updateOne({
      guildId: message.guild.id, 
      userId: member.user.id
    }, {
      userNames: [ ...registerModel.userNames, nickData ]
    });
   
   await member.roles.add(global.Perm.Register.Woman)
    await member.roles.remove(global.Perm.Welcome.Unregistered)
    await member.roles.remove(global.Perm.Register.Man)
   
    /*let roles = member.roles.cache.clone().filter(e => e.managed).map(e => e.id).concat(global.Perm.Register.Woman);
    if(member.user.username.includes(global.Perm.Defaults.Tag)) roles.push(global.Perm.Defaults.Family_Role)
    member.roles.set(roles).catch();*/

    const embed = new MessageEmbed()
      .setAuthor(message.author.tag, message.author.avatarURL({ dynamic: true }))
      .setColor("RANDOM")
      .setDescription(`${member.toString()} Ã¼yesine ${global.Perm.Register.Woman.map(x => `<@&${x}>`)} rolleri verildi.`).setFooter(`Ãœyenin ceza puanÄ± ${pData.point ?? 0}`);
    message.channel.send(embed)//.then(x => x.delete({timeout: 5000}))
    if (global.Perm.Defaults.General_Chat && client.channels.cache.has(global.Perm.Defaults.General_Chat)) client.channels.cache.get(global.Perm.Defaults.General_Chat).send(`AramÄ±za yeni biri katÄ±ldÄ±! ${member.toString()} ona hoÅŸ geldin diyelim!`)
  }

  if (onayContent.includes(".iptal")) {
    const embed = new MessageEmbed()
      .setAuthor(message.author.tag, message.author.avatarURL({ dynamic: true }))
      .setColor("RANDOM")
      .setDescription(`${member.toString()} adlÄ± kullanÄ±cÄ±nÄ±n kayÄ±t iÅŸlemi iptal edildi.`);
    await Register.updateOne({
      guildId: message.guild.id, 
      userId: member.user.id
    }, {
      userNames: [ ...registerModel.userNames, nickData ]
    });
    message.channel.send(embed);
  }

}


exports.conf = {
  commands: ["name", "nick", "isim"],
  enabled: true,
  usage: "isim <@etiket/ID> Ä°sim YaÅŸ"
};
